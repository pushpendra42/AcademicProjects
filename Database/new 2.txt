/*package whatever //do not write package name here */

import java.util.*;
import java.io.*;
import java.lang.*;
class gfg
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        
        while(t-- > 0)
        {
            int n = Integer.parseInt(read.readLine());
            
            String st[] = read.readLine().trim().split("\\s+");
            for(int i = 0; i < n; i++)
              val[i] = Integer.parseInt(st[i]);
            
              
            if(new Subset().SubsetSolve(val, n))
            System.out.println("YES");
                else
                System.out.println("NO");
        }
    }
}

class Subset 
{ 
    // Returns thea maximum value that can be put in a knapsack of capacity W 
    static boolean SubsetSolve(int val[], int n) 
    { 
      int sum=0;
      for(int i=0;i<n;i++)
      {
          sum+=val[i];
      }
      
      if(sum & 1)
      return false;
      
      int sumPair=sum/2;
      boolean[][] res=new boolean[n][sumPair+1];
      
      for(int i=0;i<n;i++)
      {
          res[i][0]=true;
      }
      
      for(int i=0;i<n;i++)
      {
          for(int j=1;j<sumPair+1;j++)
          {
              if(j==val[i])
                res[i][j]=true;
              if(val[i]>j)
                res[i][j]=false;
              else
                  res[i][j]=res[i-1][j-val[i]];
          }
      }
      
      return res[n-1][sumPair];
      
    } 
}